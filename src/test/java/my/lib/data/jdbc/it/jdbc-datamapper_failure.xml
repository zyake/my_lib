<jdbc-datamapper>
    <global>
        # use own DataSource(without transaction manager)
        dataaccess.mapper.jdbc.connectionmanager.fqcn=my.apps.phrasesearcher.dataaccess.jdbc.DataSourceConnectionManager
        dataaccess.mapper.jdbc.connectionmanager.config.datasource.fqcn=org.h2.jdbcx.JdbcDataSource
        dataaccess.mapper.jdbc.connectionmanager.config.datasource.URL=jdbc:h2:file:test/DataMapper
        dataaccess.mapper.jdbc.connectionmanager.config.datasource.User=sa
        dataaccess.mapper.jdbc.connectionmanager.config.datasource.Password=sa

        dataaccess.mapper.jdbc.sqlexpressionparser.fqcn=my.apps.phrasesearcher.dataaccess.jdbc.config.NamedParameterSqlExpressionParser
        dataaccess.mapper.jdbc.strategies.entity.fqcn=my.apps.phrasesearcher.dataaccess.jdbc.EntityRowMapper
        dataaccess.mapper.jdbc.strategies.entity.config.setterresolver.fqcn=my.apps.phrasesearcher.dataaccess.jdbc.UnderScoreSetterResolver
    </global>
    <sqls>
        <sql id="select-config" target="my.apps.phrasesearcher.dataaccess.jdbc.CategoryConfig" strategy="entity">
            SELECT ID, CONFIG_NAME
            FROM INVALID
            WHERE ID  > {Id}
        </sql>
        <sql id="insert-config" target="my.apps.phrasesearcher.dataaccess.jdbc.CategoryConfig" strategy="entity">
            INSERT INTO CategoryConfig(ID, CONFIG_NAME)
             VALUES({Id}, {ConfigName})
        </sql>
    </sqls>
</jdbc-datamapper>